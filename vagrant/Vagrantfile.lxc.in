# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # SERVER 1
  config.vm.define "${SERVER1_NAME}" do |srv|
    srv.vm.box = "isc/${SERVER_IMAGE}"
    srv.vm.hostname = "${SERVER1_NAME}"
    srv.vm.provider "lxc" do |v|
      v.container_name = "${SERVER1_NAME}"
      v.customize 'rootfs.path', "/var/lib/lxc/${SERVER1_NAME}/rootfs"  # fix for issues in vagrant-lxc

      v.customize 'net.1.type', 'veth'
      v.customize 'net.1.flags', 'up'
      v.customize 'net.1.link', '${MGMT_BRG}'
      v.customize 'net.1.ipv4.address', '${MGMT_ADDRESS}/24'
      v.customize 'net.1.name', 'mgmt'

      v.customize 'net.2.type', 'veth'
      v.customize 'net.2.flags', 'up'
      v.customize 'net.2.link', '${TRAFFIC_BRG}'
      v.customize 'net.2.ipv4.address', '${SRV4_ADDR}/24'
      v.customize 'net.2.ipv6.address', '${SRV_IPV6_ADDR_GLOBAL}/64'
      v.customize 'net.2.name', '${SERVER_IFACE}'
    end
    srv.vm.synced_folder "${KEA_DIRS}", "/kea-dirs"
    srv.vm.synced_folder "${CCACHE_DIR}", "/ccache"

    srv.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key", "../../../id_rsa"]
    srv.ssh.insert_key = false
    srv.vm.provision "file", source: "../../../id_rsa", destination: "$HOME/.ssh/id_rsa"
    srv.vm.provision "file", source: "../../../id_rsa.pub", destination: "$HOME/.ssh/id_rsa.pub"
    srv.vm.provision "shell", privileged: false, path: "../../../provision-keys.sh"
    srv.vm.provision "shell", privileged: false, path: "../../../provision-srv-${PKG}.sh"
  end

  # SERVER 2
  config.vm.define "${SERVER2_NAME}" do |srv|
    srv.vm.box = "isc/${SERVER_IMAGE}"
    srv.vm.hostname = "${SERVER2_NAME}"
    srv.vm.provider "lxc" do |v|
      v.container_name = "${SERVER2_NAME}"
      v.customize 'rootfs.path', "/var/lib/lxc/${SERVER2_NAME}/rootfs"  # fix for issues in vagrant-lxc

      v.customize 'net.1.type', 'veth'
      v.customize 'net.1.flags', 'up'
      v.customize 'net.1.link', '${MGMT_BRG}'
      v.customize 'net.1.ipv4.address', '${MGMT_ADDRESS_2}/24'
      v.customize 'net.1.name', 'mgmt'

      v.customize 'net.2.type', 'veth'
      v.customize 'net.2.flags', 'up'
      v.customize 'net.2.link', '${TRAFFIC_BRG}'
      v.customize 'net.2.ipv4.address', '${SRV4_ADDR}/24'
      v.customize 'net.2.ipv6.address', '${SRV_IPV6_ADDR_GLOBAL}/64'
      v.customize 'net.2.name', '${SERVER_IFACE}'
    end
    srv.vm.synced_folder "${KEA_DIRS}", "/kea-dirs"
    srv.vm.synced_folder "${CCACHE_DIR}", "/ccache"

    srv.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key", "../../../id_rsa"]
    srv.ssh.insert_key = false
    srv.vm.provision "file", source: "../../../id_rsa", destination: "$HOME/.ssh/id_rsa"
    srv.vm.provision "file", source: "../../../id_rsa.pub", destination: "$HOME/.ssh/id_rsa.pub"
    srv.vm.provision "shell", privileged: false, path: "../../../provision-keys.sh"
    srv.vm.provision "shell", privileged: false, path: "../../../provision-srv-${PKG}.sh"
  end

  # CLIENT
  config.vm.define "${CLIENT_NAME}" do |clnt|
    clnt.vm.box = "godfryd/forge-clt-ubuntu-18.04"
    clnt.vm.hostname = "${CLIENT_NAME}"
    clnt.vm.provider "lxc" do |v|
      v.container_name = "${CLIENT_NAME}"
      v.customize 'rootfs.path', "/var/lib/lxc/${CLIENT_NAME}/rootfs"

      v.customize 'net.1.type', 'veth'
      v.customize 'net.1.flags', 'up'
      v.customize 'net.1.link', '${MGMT_BRG}'
      v.customize 'net.1.ipv4.address', '172.28.0.20/24'
      v.customize 'net.1.name', 'mgmt'

      v.customize 'net.2.type', 'veth'
      v.customize 'net.2.flags', 'up'
      v.customize 'net.2.link', '${TRAFFIC_BRG}'
      v.customize 'net.2.ipv4.address', '${CLNT4_ADDR}/24'
      v.customize 'net.2.ipv6.address', '2001:db8:1::1000/64'
      v.customize 'net.2.name', '${IFACE}'
    end
    clnt.vm.synced_folder "../../../..", "/forge"

    clnt.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key", "../../../id_rsa"]
    clnt.ssh.insert_key = false
    clnt.vm.provision "file", source: "../../../id_rsa", destination: "$HOME/.ssh/id_rsa"
    clnt.vm.provision "file", source: "../../../id_rsa.pub", destination: "$HOME/.ssh/id_rsa.pub"
    clnt.vm.provision "shell", privileged: false, path: "../../../provision-keys.sh"
    clnt.vm.provision "shell", privileged: false, path: "../../../provision-clnt.sh"
  end
end
