# Configuration file, please copy this to the init_all.py and fill it with your
# variables. init_all.py is added to gitignore.

# All configurations are separated to different sections:
# general - for general Forge configuration ;)
# database backends - for database credentials
# ssh - for ssh connection between virtual machines
# kea - for kea configuration


# ==============================================================================
# ================================== GENERAL ===================================

# DISABLE_DB_SETUP = False

# FABRIC_PTY = False

# Forge verbose level
# 0: Some output
# 1: Show shell commands, commands send to DUT, responses received from DUT.
# 2: Show all called functions.
# FORGE_VERBOSE = 1

# This defines the logging level for the common logger used by this framework
# Possible values are CRITICAL, ERROR, WARNING, INFO and DEBUG and they are
# case insensitive.
# LOGLEVEL = 'info'

# OUTPUT_WAIT_INTERVAL = 1

# OUTPUT_WAIT_MAX_INTERVALS = 2

# Controls whether packet contents are shown on stdout.  Choices are:
# client - shows DHCP requests sent from the test client
# server -  shows DHCP responses received from the server under test
# both - shows DHCP packets from both test client and server under test
# SHOW_PACKETS_FROM = 'both'

# This defines which software will be tested.
# Allowed values:
# dibbler_client, dibbler_server, kea6_server, kea4_server, isc_dhcp4_server, isc_dhcp6_server,
# kea4_server_bind, kea6_server_bind, bind9_server
# Not all of those are functional yet. This is essentially the
# name of the subdirectory in tests/softwaresupport
# This is list of software under test, you can test server or client (not both!) at the same time,
# also you can use only one DHCP and one DNS server and must end with comma ","
# like in e.g.: SOFTWARE_UNDER_TEST = 'kea4_server', 'bind9_server',
# or must be inside brackets to form a tuple
# like in e.g.: SOFTWARE_UNDER_TEST = ('kea4_server', 'bind9_server')
# INCORRECT COMBINATIONS: SOFTWARE_UNDER_TEST = ('kea4_server', 'kea6_server')

# SOFTWARE_UNDER_TEST = ('kea4_server', 'bind9_server')

# ==============================================================================
# ==================================== DUT =====================================

# The IPv4 address configured on the DUT-facing interface on the server side
SRV4_ADDR = ''

# The IPv4 address configured on the DUT-facing interface on the second HA node
SRV4_ADDR_2 = ''

# This specifies relay agent address. Leave this as 0.0.0.0 if you don't want
# to test relayed traffic.
# REL4_ADDR = '0.0.0.0'

# The interface name for the first server. The first server is always tested
# and has the primary role in tests involving Kea with High Availability (HA).
SERVER_IFACE = ''
# The second interface name for first server for hub and spoke tests.
SERVER_IFACE2 = ''

# The interface name for the second server. The second server is used sparingly
# in tests and can have the secondary, standby or backup role in tests involving
# Kea with High Availability (HA). It can also be used as a second standalone
# server connected to a database backend that is shared by the first server.
SERVER2_IFACE = ''

# The interface name for the third server. The third server is used hub and spoke tests.
SERVER3_IFACE = ''

# Specifies path to the server installation directory on DUT. This must
# point to root directory of server installation and must end with /.
# SOFTWARE_INSTALL_PATH = '/usr/local/'

# Kea install method, it can be:
# - 'make' - make install straight from sources or
# - 'native' - from native deb/rpm packages using rpm or dpkg
# INSTALL_METHOD = 'make'

# When Forge sends a packet, it typically awaits for the server to respond.
# Server typically does that promptly, but during debugging it is benefical for
# the test to wait a long time. If test concludes too early, it will remove
# the configuration and kill the server (while the debugging still taking place)
# PACKET_WAIT_INTERVAL = 1

# scope link server address for testing unicast messages
# Address 3000:: is strongly recommended for global address. Most tests are using pool
# 3000::1-3000::ffff in this case recommended address will not cover any address form
# server pool (what could cause some tests to fail)
# SRV_IPV6_ADDR_GLOBAL = '3000::1000'
# SRV_IPV6_ADDR_LINK_LOCAL = 'fe80::a00:27ff:fedf:63bc'

# If you want to build tests history in history.html set HISTORY to True if not,
# to False but for more detailed information about tests, use --with_xunit option
# when starting src/forge_cfg.py
# HISTORY = True

# Save log file in tests result folder
# SAVE_LOGS = True

# Save leases file in tests result folder
# SAVE_LEASES = True

# Also you can save separate .pcap file of every test. In default it's disabled
# If you receive error tcpdump: <file name>: Permission denied
# please use command as a root: aa-complain /usr/sbin/tcpdump
# TCPDUMP = True

# TCPDUMP_ON_REMOTE_SYSTEM = False

# If your tcpdump is installed in different location place that in TCPDUMP_INSTALL_DIR
# otherwise leave it blank
# TCPDUMP_PATH = ''

# Also we can decide to keep main configuration file in tests_results.
# SAVE_CONFIG_FILE = True

# Auto archive it's feature that automatically create tar archive containing
# folder 'tests_results' and history.html (if created). Default disabled.
# AUTO_ARCHIVE = False

# SLEEP_TIME 1 and 2 are times Forge waiting after performing commands on remote DUT.
# for slower devices it's recommended to set sleep time for longer then couple 1-2 seconds
# SLEEP_TIME_1 = 1  # wait after starting remote server
# SLEEP_TIME_2 = 2  # wait after all others commands

# HA_PACKET_WAIT_INTERVAL_FACTOR = 4

# RADIUS_PACKET_WAIT_INTERVAL_FACTOR = 4

# ==============================================================================
# =================================== CLIENT ===================================

# Client address
CIADDR = ''

# CLI_LINK_LOCAL = ''
# CLI_LINK_LOCAL2 = ''

# CLIENT_IPV6_ADDR_GLOBAL = ''

# CLNT4_ADDR = ''

# CLNT4_ADDR_2 = ''

# This is a value client will set giaddr field to. Leave it as 0.0.0.0 if you
# don't want to test relays
# GIADDR4 = '0.0.0.0'

# Defines name of the DUT-facing network interface
IFACE = ''
# Defines name of the second DUT-facing network interface for hub and spoke tests
IFACE2 = ''


# ==============================================================================
# ============================= DATABASE BACKENDS ==============================
# If server is capable to use different database backends, fill this section

# Backend type:
# DB_TYPE = 'memfile'

# Data base name:
# DB_NAME = 'keadb'

# User name for database named DB_NAME
# DB_USER = 'keauser'

# Password for user DB_USER:
# DB_PASSWD = 'keapass'

# Host address where is our data base, most likely it will be 'localhost'
# DB_HOST = ''


# ==============================================================================
# ==================================== SSH =====================================
# This are required management information about device under test (the one that
# tested server will be running on) root privileges are required! So edit sudoers
# file, or use root account.
# ip address and port. ssh port default 22
MGMT_ADDRESS = ''
MGMT_USERNAME = ''
MGMT_PASSWORD = ''
# MGMT_PASSWORD_CMD = ''

# The second HA node
# MGMT_ADDRESS_2 = ''

# The third HA node i.e. load-balancing backup node
# MGMT_ADDRESS_3 = ''


# ==============================================================================
# ==================================== DNS =====================================
# When DNS protocol used to testing.

# BIND_LOG_LVL = 0

# BIND_LOG_TYPE = 'INFO'

# BIND_MODULE = ''

# Interface on which we are sending DNS queries
# DNS_IFACE = ''

# DNS server address:
# DNS4_ADDR = ''
# DNS6_ADDR = ''

# DNS port number, default value is 53
# DNS_PORT = 53

# DNS_RETRY = 6

# Absolute path to server installation:
# DNS_SERVER_INSTALL_PATH = '/opt/bind/sbin'

# Additional path for server management:
# DNS_DATA_PATH = '/opt/bind/data'

# WIN_DNS_ADDR' = ''
